// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @unique
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum JobSeekerProfile {
  PENDING
  APPROVED
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  job_seeker    JobSeeker?
  employee      Employee?
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
}

enum JobSeekerStatus {
  PENDING
  APPROVED
}

model JobSeeker {
  id         String           @id @default(cuid())
  userId     String           @unique
  user       User             @relation(fields: [userId], references: [id])
  status     JobSeekerStatus  @default(PENDING)
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt
} 

enum EmployeeStatus {
  PENDING
  APPROVED
}

model Employee {
  id         String           @id @default(cuid())
  userId     String           @unique
  user       User             @relation(fields: [userId], references: [id])
  status     JobSeekerStatus  @default(PENDING)
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt
}